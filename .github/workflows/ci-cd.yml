name: CI/CD Pipeline with SonarQube

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-analysis:
    name: Tests & Code Quality Analysis
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: 📦 Build & Run Tests
        run: mvn clean verify --batch-mode

      - name: 📊 Publish JUnit Test Report
        uses: dorny/test-reporter@v1
        if: always() # Run even if tests fail
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit

      - name: 🔍 SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          args: >
            -Dsonar.projectKey=my-java-project
            -Dsonar.sources=src
            -Dsonar.tests=src/test
            -Dsonar.java.binaries=target/classes
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: ✅ SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
